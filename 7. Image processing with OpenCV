
##################CODE
#!/usr/bin/env python

#import numpy, a data structure that will handle the image
#library for storing multi dimensional arrays

import numpy as np 
import cv2

image_name = "tree"

print 'read an image from the file'
color_image = cv2.imread("images/"+image_name+".jpg",cv2.IMREAD_COLOR)

# creating a window holder for the image'
#cv2.namedWindow("Image", cv2.WINDOW_NORMAL) #default is cv2.WINDOW_AUTOSIZE, what ive used allows us to resize the window

print 'display the image in native color'
cv2.imshow("Image",color_image)
cv2.moveWindow("Original Image",0,0) 
#used to display in a window, must be used with the bottom command: waitKey
print(color_image.shape) 
#prints shape of the image ie It returns a tuple of the number of rows, columns, and channels (if the image is color)

height,width,channels = color_image.shape

#splitting the image in terms of rgb
print 'slipt the image into three channels.'
blue,green,red = cv2.split(color_image)

cv2.imshow("Blue Channel",blue)
cv2.moveWindow("Blue Channel",0,height)

cv2.imshow("Red Channel",red)
cv2.moveWindow("Red Channel",0,height)

cv2.imshow("Green Channel",green)
cv2.moveWindow("Green Channel",0,height)

#splitting the image in terms of hue , saturation and value, better in lighted conditions

print '---- slipt the image into Hue, Saturation, Value channels.----- '
hsv = cv2.cvtColor(color_image, cv2.COLOR_BGR2HSV)
h,s,v = cv2.split(hsv)
hsv_image = np.concatenate((h,s,v),axis=1)
cv2.imshow("Hue, Saturation, Value Image",hsv_image)
cv2.imshow("HSV Image",hsv)

#print 'press a key inside the image to make a copy'
#cv2.waitKey(0)

#print 'image copied to folder images/copy/'
#cv2.imwrite("images/copy/"+image_name+"-copy.jpg",img)
cv2.waitKey(0)
cv2.destroyAllWindows()
